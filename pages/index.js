import Head from "next/head";
import axios from "axios";
import { useState, useEffect } from "react";
import Image from "next/image";
import { BsSearch } from "react-icons/bs";
import Weather from "../components/Weather";

export default function Home() {
  const [city, setCity] = useState("");
  const [weather, setWeather] = useState({});
  const [loading, setLoading] = useState(false);
  const [imageUrl, setImageUrl] = useState('/sunny.jpg'); // Default sunny image

  const apiKey = process.env.WEATHER_KEY;
  const unsplashAccessKey = process.env.UNSPLASH_ACCESS_KEY;

  // Fetch default sunny image
  useEffect(() => {
    const fetchDefaultImage = async () => {
      const url = `https://api.unsplash.com/photos/random?query=sunny&client_id=${unsplashAccessKey}`;
      try {
        const response = await axios.get(url);
        setImageUrl(response.data.urls.regular);
      } catch (error) {
        console.error("Error fetching default image:", error);
      }
    };

    fetchDefaultImage();
  }, [unsplashAccessKey]);

  // Fetch weather-specific image
  const fetchWeatherImage = async (query) => {
    const url = `https://api.unsplash.com/photos/random?query=${query}&client_id=${unsplashAccessKey}`;

    try {
      const response = await axios.get(url);
      setImageUrl(response.data.urls.regular);
    } catch (error) {
      console.error("Error fetching image:", error);
    }
  };

  const fetchWeather = async (e) => {
    e.preventDefault();

    if (!city) {
      alert("Please enter a city");
      return;
    }

    try {
      setLoading(true);
      const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiKey}`;
      const response = await axios.get(url);
      setWeather(response.data);
      setLoading(false);
      // Fetch weather-specific image based on the weather condition
      const weatherCondition = response.data.weather[0].main.toLowerCase();
      fetchWeatherImage(weatherCondition);
    } catch (error) {
      console.error("Error fetching weather data:", error);
      setLoading(false);
    }

    setCity("");
  };

  return (
    <>
      <Head>
        <title>Weather App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {imageUrl && (
        <Image
          src={imageUrl}
          layout="fill"
          objectFit="cover"
          alt="Weather-related image"
        />
      )}
      <div className="relative flex justify-between items-center my-5 max-w-[500px] w-full m-auto pt-4">
        <form
          className="border-2 md:w-full w-11/12 p-2 flex justify-between items-center m-auto rounded-tr-lg rounded-bl-lg sm:rounded-lg"
          onSubmit={fetchWeather}
        >
          <input
            className="m-2 sm:m-4  bg-green-200 sm:w-4/5 focus:border-none rounded-xl p-1 px-3 sm:p-2 focus:outline-none"
            type="text"
            value={city}
            onChange={(e) => setCity(e.target.value)}
            placeholder="Enter city name"
          />
          <button
            className="text-orange-700 text-1xl sm:text-2xl w-1/5 ml-0 hover:text-2xl sm:hover:text-3xl rounded-lg sm:p-3 sm:p-5"
            type="submit"
          >
            <BsSearch />
          </button>
        </form>
      </div>
      <div className="">{weather.main && <Weather data={weather} />}</div>
    </>
  );
}
